name: build-docker-images
on:
  workflow_call:
    inputs:
      version:
        type: string
        description: The release semver version
        required: true
      channel:
        type: string
        description: The release channel (latest-rc, nightly, dev, etc)
        required: true
      registry:
        type: string
        description: Container registry to use (docker, ghcr)
        default: docker
        required: false
    secrets:
      DOCKER_USERNAME:
        required: false
      DOCKER_PASSWORD:
        required: false

jobs:
  buildPush:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        variant: [full, slim]
      fail-fast: false
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        id: setup-node
        with:
          node-version: ${{ vars.NODE_VERSION_OVERRIDE || 'lts/*' }}

      - name: Collect version info
        if: matrix.variant == 'slim'
        uses: salesforcecli/github-workflows/.github/actions/versionInfo@main
        id: version-info
        with:
          version: ${{ inputs.version }}
          npmPackage: '@salesforce/cli'

      - name: Collect Node checksums
        if: matrix.variant == 'full'
        id: node-checksum
        run: |
          NODE_VERSION="$STEPS_SETUP_NODE_NODE_VERSION"
          URL="https://nodejs.org/dist/$NODE_VERSION/SHASUMS256.txt"
          
          # Get both architectures' checksums
          AMD64_SHA=$(curl -s "$URL" | awk "/[0-9a-f]{64}  node-$NODE_VERSION-linux-x64.tar.gz/ { print \$1 }")
          ARM64_SHA=$(curl -s "$URL" | awk "/[0-9a-f]{64}  node-$NODE_VERSION-linux-arm64.tar.gz/ { print \$1 }")
          
          echo "amd64_sha=$AMD64_SHA" >> "$GITHUB_OUTPUT"
          echo "arm64_sha=$ARM64_SHA" >> "$GITHUB_OUTPUT"
        env:
          STEPS_SETUP_NODE_NODE_VERSION: ${{ steps.setup-node.outputs.node-version }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure registry
        id: registry
        run: |
          if [ "${{ inputs.registry }}" = "ghcr" ]; then
            echo "url=ghcr.io/${{ github.repository_owner }}" >> $GITHUB_OUTPUT
            echo "username=${{ github.actor }}" >> $GITHUB_OUTPUT
            echo "password=${{ github.token }}" >> $GITHUB_OUTPUT
          else
            echo "url=docker.io" >> $GITHUB_OUTPUT
            echo "username=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_OUTPUT
            echo "password=${{ secrets.DOCKER_PASSWORD }}" >> $GITHUB_OUTPUT
          fi

      - name: Log in to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ steps.registry.outputs.url }}
          username: ${{ steps.registry.outputs.username }}
          password: ${{ steps.registry.outputs.password }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ steps.registry.outputs.url }}/salesforce/cli

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          platforms: linux/amd64,linux/arm64
          labels: ${{ steps.meta.outputs.labels }}
          file: Dockerfile
          build-args: |
            VARIANT=${{ matrix.variant }}
            NODE_VERSION=${{ steps.setup-node.outputs.node-version }}
            NODE_CHECKSUM=${{ matrix.variant == 'full' && contains(matrix.platform, 'arm64') && steps.node-checksum.outputs.arm64_sha || steps.node-checksum.outputs.amd64_sha }}
            SF_CLI_VERSION=${{ inputs.version }}
            DOWNLOAD_URL=${{ steps.version-info.outputs.url }}
          tags: |
            ${{ steps.registry.outputs.url }}/salesforce/cli:${{ inputs.channel }}-${{ matrix.variant }}
            ${{ steps.registry.outputs.url }}/salesforce/cli:${{ inputs.version }}-${{ matrix.variant }}
          cache-from: type=gha,scope=${{ matrix.variant }}
          cache-to: type=gha,mode=max,scope=${{ matrix.variant }}

  verify:
    needs: buildPush
    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]
        variant: [full, slim]
    runs-on: ubuntu-latest
    steps:
      - name: Test on ${{ matrix.platform }}
        uses: docker/setup-qemu-action@v3
      
      - name: Run verification
        run: |
          docker run --rm --platform ${{ matrix.platform }} \
            ${{ inputs.registry == 'ghcr' && format('ghcr.io/{0}', github.repository_owner) || 'docker.io' }}/salesforce/cli:${{ inputs.version }}-${{ matrix.variant }} \
            bash -c '
              set -e
              
              # Common checks
              sf version
              SF_CLI_VERSION=$(sf version)
              
              # Verify SF CLI
              if [[ ((`echo $SF_CLI_VERSION | grep -c "@salesforce/cli/"` > 0))]]
              then
                echo "sf installed -" $SF_CLI_VERSION
              else
                echo "The sf installation could not be verified"
                exit 1
              fi
              
              # Additional checks for full variant
              if [ "${{ matrix.variant }}" = "full" ]; then
                node -v
                jq --help
                NODE_VERSION=$(sf version --verbose --json | jq ".nodeVersion")
                
                if [[ ((`echo $NODE_VERSION | grep -c "v"` > 0))]]
                then
                  echo "node installed -" $NODE_VERSION
                else
                  echo "The node installation could not be verified"
                  exit 1
                fi
              fi
            '